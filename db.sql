statement.execute("CREATE TABLE PEOPLE (USER_ID VARCHAR(50) NOT NULL, PASSWORD VARCHAR(20) NOT NULL, " +
				"FIRST_NAME VARCHAR(100) NOT NULL, LAST_NAME VARCHAR(100) NOT NULL, " +
				"ROLE VARCHAR(50) NOT NULL, PRIMARY KEY (USER_ID))");

statement.execute("CREATE TABLE FEEDBACK (FEEDBACK_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1022, INCREMENT BY 1), " +
        "NAME VARCHAR(100) NOT NULL, EMAIL VARCHAR(50) NOT NULL, SUBJECT VARCHAR(100) NOT NULL, " +
        "COMMENTS VARCHAR(500) NOT NULL, PRIMARY KEY (FEEDBACK_ID))");

statement.execute("CREATE TABLE ACCOUNTS (ACCOUNT_ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 800000, INCREMENT BY 1), " +
        "USERID VARCHAR(50) NOT NULL, ACCOUNT_NAME VARCHAR(100) NOT NULL, " +
        "BALANCE DOUBLE NOT NULL, PRIMARY KEY (ACCOUNT_ID))");

statement.execute("CREATE TABLE TRANSACTIONS (TRANSACTION_ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 2311, INCREMENT BY 1), " +
        "ACCOUNTID BIGINT NOT NULL, DATE TIMESTAMP NOT NULL, TYPE VARCHAR(100) NOT NULL, " +
        "AMOUNT DOUBLE NOT NULL, PRIMARY KEY (TRANSACTION_ID))");

statement.execute("CREATE TABLE TRADE (TRADE_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 3970, INCREMENT BY 1), " +
        "ACCOUNTID BIGINT NOT NULL, DATE TIMESTAMP NOT NULL, TYPE VARCHAR(100) NOT NULL, STOCKSYMBOL VARCHAR(50) NOT NULL, " +
        "TRADEAMOUNT INTEGER NOT NULL, TRADEPRICE DOUBLE NOT NULL, PRIMARY KEY (TRADE_ID))");

statement.execute("CREATE TABLE HOLDINGS (ACCOUNTID BIGINT NOT NULL, STOCKSYMBOL VARCHAR(50) NOT NULL, HOLDINGAMOUNT INTEGER NOT NULL)");